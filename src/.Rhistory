values = "avg_daily_deaths",
labels = FALSE) +
scale_fill_continuous(low = "white",
high = "red",
name = "Average Daily Deaths (2021)",
label = scales::comma) +
theme(legend.position = "right") +
labs(title = "Average Daily Deaths in the US")
# ---------------------------------------------------------------------------------------------
# now, let's create a some time series plots of daily cases and stringency index for some of the states....
# create ggplot object for NY...
i <- ggplot(data = NY,
mapping = aes(x = date))
# create time series plot for NY...
i + geom_line(aes(y = daily_cases / 100,
col = "Daily Cases / 100",
linetype = "Daily Cases / 100",
size = "Daily Cases / 100")) +
geom_line(aes(y = daily_deaths,
col = "Daily Deaths",
linetype = "Daily Deaths",
size = "Daily Deaths")) +
geom_line(aes(y = stringency_index,
col = "Stringency Index",
linetype = "Stringency Index",
size = "Stringency Index")) +
scale_color_manual(name = "Series",
values = c("Daily Cases / 100" = "purple",
"Daily Deaths" = "red",
"Stringency Index" = "green")) +
scale_linetype_manual(name = "Series",
values = c("Daily Cases / 100" = 1,
"Daily Deaths" = 2,
"Stringency Index" = 1)) +
scale_size_manual(name = "Series",
values = c("Daily Cases / 100" = 0.5,
"Daily Deaths" = 0.5,
"Stringency Index" = 1)) +
labs(title = "New York Time Series Analysis",
x = "Date", y = "Series Value") +
guides(fill = guide_legend(title = "Series")) +
theme_linedraw()
# create ggplot object for LA...
i <- ggplot(data = LA,
mapping = aes(x = date))
# create time series plot for LA...
i + geom_line(aes(y = daily_cases / 100,
col = "Daily Cases / 100",
linetype = "Daily Cases / 100",
size = "Daily Cases / 100")) +
geom_line(aes(y = daily_deaths,
col = "Daily Deaths",
linetype = "Daily Deaths",
size = "Daily Deaths")) +
geom_line(aes(y = stringency_index,
col = "Stringency Index",
linetype = "Stringency Index",
size = "Stringency Index")) +
scale_color_manual(name = "Series",
values = c("Daily Cases / 100" = "purple",
"Daily Deaths" = "red",
"Stringency Index" = "green")) +
scale_linetype_manual(name = "Series",
values = c("Daily Cases / 100" = 1,
"Daily Deaths" = 2,
"Stringency Index" = 1)) +
scale_size_manual(name = "Series",
values = c("Daily Cases / 100" = 0.5,
"Daily Deaths" = 0.5,
"Stringency Index" = 1)) +
labs(title = "Louisiana Time Series Analysis",
x = "Date", y = "Series Value") +
guides(fill = guide_legend(title = "Series")) +
theme_linedraw()
# create ggplot object for HI...
i <- ggplot(data = HI,
mapping = aes(x = date))
# create time series plot for HI...
i + geom_line(aes(y = daily_cases / 100,
col = "Daily Cases / 100",
linetype = "Daily Cases / 100",
size = "Daily Cases / 100")) +
geom_line(aes(y = daily_deaths,
col = "Daily Deaths",
linetype = "Daily Deaths",
size = "Daily Deaths")) +
geom_line(aes(y = stringency_index,
col = "Stringency Index",
linetype = "Stringency Index",
size = "Stringency Index")) +
scale_color_manual(name = "Series",
values = c("Daily Cases / 100" = "purple",
"Daily Deaths" = "red",
"Stringency Index" = "green")) +
scale_linetype_manual(name = "Series",
values = c("Daily Cases / 100" = 1,
"Daily Deaths" = 2,
"Stringency Index" = 1)) +
scale_size_manual(name = "Series",
values = c("Daily Cases / 100" = 0.5,
"Daily Deaths" = 0.5,
"Stringency Index" = 1)) +
labs(title = "Hawaii Time Series Analysis",
x = "Date", y = "Series Value") +
guides(fill = guide_legend(title = "Series")) +
theme_linedraw()
library(data.table)
library(COVID19)
library(ggplot2)
library(data.table)
for (index in state_indices) {
print(paste(state.abb[index], state.name[index], sep = " ----> "))
}
# define an empty vector to contain 2-sided minimum levels of significance for each state...
states_diff_alphas <- vector()
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alphas) + 1] <- ">= 0.10"
}
}
# define an empty vector to contain 2-sided minimum levels of significance for each state...
states_diff_alpha <- vector()
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alphas) + 1] <- ">= 0.10"
}
}
# define an empty vector to contain 2-sided minimum levels of significance for each state...
states_diff_alpha <- vector()
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alphas) + 1] <- ">= 0.10"
}
}
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alphas) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alphas) + 1] <- ">= 0.10"
}
}
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alpha) + 1] <- ">= 0.10"
}
}
# define an empty vector to contain 2-sided minimum levels of significance for each state...
states_diff_alpha <- vector()
for (index in state_indices) {
if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.01) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.05) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "diff_ttest_obj", sep = "_"))$p.value < 0.10) {
states_diff_alpha[length(states_diff_alpha) + 1] <- "< 0.10"
}
else {
states_diff_alpha[length(states_diff_alpha) + 1] <- ">= 0.10"
}
}
# create a data.frame to be used in a heat map plot...
states_diff_alpha_df <- data.frame(
states = state.name,
fips = z,
level_of_significance = states_diff_alpha
)
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "levels_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Level of Significance",
value = c(">= 0.10" = "white",
"< 0.10" = "#ff559955",
"< 0.05" = "#ff5599aa",
"< 0.01" = "#ff5599ff"))
library(sf)
library(tigris)
library(tidycensus) # official US state, county boundaries...
library(mapview)
library(usmap)
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "levels_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Level of Significance",
value = c(">= 0.10" = "white",
"< 0.10" = "#ff559955",
"< 0.05" = "#ff5599aa",
"< 0.01" = "#ff5599ff"))
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Level of Significance",
value = c(">= 0.10" = "white",
"< 0.10" = "#ff559955",
"< 0.05" = "#ff5599aa",
"< 0.01" = "#ff5599ff"))
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Level of Significance",
values = c(">= 0.10" = "white",
"< 0.10" = "#ff559955",
"< 0.05" = "#ff5599aa",
"< 0.01" = "#ff5599ff"))
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Level of Significance",
values = c(">= 0.10" = "white",
"< 0.10" = "#ff552233",
"< 0.05" = "#ff552288",
"< 0.01" = "#ff5522cc")) +
theme(legend.position = "right") +
labs(title = "Statistical Significances of Lenient-Strict Mean Difference")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#ff552233",
"< 0.05" = "#ff552288",
"< 0.01" = "#ff5522cc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#aa552233",
"< 0.05" = "#aa552288",
"< 0.01" = "#aa5522cc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#aa55dd33",
"< 0.05" = "#aa55dd88",
"< 0.01" = "#aa55ddcc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#2255dd33",
"< 0.05" = "#2255dd88",
"< 0.01" = "#2255ddcc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#7755dd33",
"< 0.05" = "#7755dd88",
"< 0.01" = "#7755ddcc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#77f5dd33",
"< 0.05" = "#77f5dd88",
"< 0.01" = "#77f5ddcc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#77f59d33",
"< 0.05" = "#77f59d88",
"< 0.01" = "#77f59dcc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
View(TN_strict_smaller_mean_ttest_obj)
# create an empty vector to contain state minimum alphas...
states_lenient_larger_alpha <- vector()
# populate empty vector...
for (index in state_indices) {
if (get(paste(state.abb[index], "strict_smaller_mean_ttest_obj", sep = "_"))$p.value < 0.01) {
states_lenient_larger_alpha[length(states_lenient_larger_alpha) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "strict_smaller_mean_ttest_obj", sep = "_"))$p.value < 0.05) {
states_lenient_larger_alpha[length(states_lenient_larger_alpha) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "strict_smaller_mean_ttest_obj", sep = "_"))$p.value < 0.10) {
states_lenient_larger_alpha[length(states_lenient_larger_alpha) + 1] <- "< 0.10"
}
else {
states_lenient_larger_alpha[length(states_lenient_larger_alpha) + 1] <- ">= 0.10"
}
}
# create a data.frame to be used in a heat map plot...
states_lenient_larger_alpha_df <- data.frame(
states = state.name,
fips = z,
level_of_significance = states_lenient_larger_alpha
)
# plot a heat map using the states_lenient_larger_alpha data.frame...
plot_usmap(data = states_lenient_larger_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#4596f333",
"< 0.05" = "#4596f388",
"< 0.01" = "#4596f3cc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (1-sided, Lenient Larger Mean)")
# plot a heat map using the states_lenient_larger_alpha data.frame...
plot_usmap(data = states_lenient_larger_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#4596f333",
"< 0.05" = "#4596f388",
"< 0.01" = "#4596f3cc")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
# plot a heat map using the states_lenient_larger_alpha data.frame...
plot_usmap(data = states_lenient_larger_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#4596f333",
"< 0.05" = "#4596f388",
"< 0.01" = "#4596f3dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
View(TN_strict_smaller_mean_ttest_obj)
View(TN_strict_smaller_mean_ttest_obj)
View(TN_strict_larger_mean_ttest_obj)
# plot a heat map using the states_diff_alpha_df data.frame...
plot_usmap(data = states_diff_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#77f59d33",
"< 0.05" = "#77f59d88",
"< 0.01" = "#77f59ddd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance (2-sided)")
# plot a heat map using the states_lenient_larger_alpha data.frame...
plot_usmap(data = states_lenient_larger_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#4596f333",
"< 0.05" = "#4596f388",
"< 0.01" = "#4596f3dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
# create an empty vector to contain state minimum alphas...
states_lenient_smaller_alpha <- vector()
# populate empty vector...
for (index in state_indices) {
if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.01) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.05) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.10) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.10"
}
else {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- ">= 0.10"
}
}
# create a data.frame to be used in a heat map plot...
states_lenient_smaller_alpha_df <- data.frame(
states = state.name,
fips = z,
level_of_significance = states_lenient_smaller_alpha
)
# plot a heat map using the states_lenient_smaller_alpha data.frame...
plot_usmap(data = states_lenient_larger_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#34f56533",
"< 0.05" = "#34f56588",
"< 0.01" = "#34f565dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
# plot a heat map using the states_lenient_smaller_alpha data.frame...
plot_usmap(data = states_lenient_smaller_alpha,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#8f556733",
"< 0.05" = "#8f556788",
"< 0.01" = "#8f5567dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
# create an empty vector to contain state minimum alphas...
states_lenient_smaller_alpha <- vector()
# populate empty vector...
for (index in state_indices) {
if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.01) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.01"
}
else if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.05) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.05"
}
else if (get(paste(state.abb[index], "strict_larger_mean_ttest_obj", sep = "_"))$p.value < 0.10) {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- "< 0.10"
}
else {
states_lenient_smaller_alpha[length(states_lenient_smaller_alpha) + 1] <- ">= 0.10"
}
}
# create a data.frame to be used in a heat map plot...
states_lenient_smaller_alpha_df <- data.frame(
states = state.name,
fips = z,
level_of_significance = states_lenient_smaller_alpha
)
# plot a heat map using the states_lenient_smaller_alpha data.frame...
plot_usmap(data = states_lenient_smaller_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#8f556733",
"< 0.05" = "#8f556788",
"< 0.01" = "#8f5567dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Larger Mean)")
# plot a heat map using the states_lenient_smaller_alpha data.frame...
plot_usmap(data = states_lenient_smaller_alpha_df,
values = "level_of_significance",
labels = FALSE) +
scale_fill_manual(name = "Minimum Alpha",
values = c(">= 0.10" = "white",
"< 0.10" = "#8f556733",
"< 0.05" = "#8f556788",
"< 0.01" = "#8f5567dd")) +
theme(legend.position = "right") +
labs(title = "Minimum Levels of Significance\n(1-sided, Lenient Smaller Mean)")
